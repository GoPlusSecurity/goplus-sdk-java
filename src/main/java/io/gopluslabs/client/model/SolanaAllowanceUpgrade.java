/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.gopluslabs.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.gopluslabs.client.model.NewAllowance;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * SolanaAllowanceUpgrade
 */



public class SolanaAllowanceUpgrade {
  @SerializedName("mint")
  private String mint = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("decimals")
  private Integer decimals = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("new_allowances")
  private List<NewAllowance> newAllowances = null;

  public SolanaAllowanceUpgrade mint(String mint) {
    this.mint = mint;
    return this;
  }

   /**
   * Get mint
   * @return mint
  **/
  @Schema(description = "")
  public String getMint() {
    return mint;
  }

  public void setMint(String mint) {
    this.mint = mint;
  }

  public SolanaAllowanceUpgrade symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public SolanaAllowanceUpgrade decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Get decimals
   * @return decimals
  **/
  @Schema(description = "")
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }

  public SolanaAllowanceUpgrade name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SolanaAllowanceUpgrade newAllowances(List<NewAllowance> newAllowances) {
    this.newAllowances = newAllowances;
    return this;
  }

  public SolanaAllowanceUpgrade addNewAllowancesItem(NewAllowance newAllowancesItem) {
    if (this.newAllowances == null) {
      this.newAllowances = new ArrayList<NewAllowance>();
    }
    this.newAllowances.add(newAllowancesItem);
    return this;
  }

   /**
   * Get newAllowances
   * @return newAllowances
  **/
  @Schema(description = "")
  public List<NewAllowance> getNewAllowances() {
    return newAllowances;
  }

  public void setNewAllowances(List<NewAllowance> newAllowances) {
    this.newAllowances = newAllowances;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SolanaAllowanceUpgrade solanaAllowanceUpgrade = (SolanaAllowanceUpgrade) o;
    return Objects.equals(this.mint, solanaAllowanceUpgrade.mint) &&
        Objects.equals(this.symbol, solanaAllowanceUpgrade.symbol) &&
        Objects.equals(this.decimals, solanaAllowanceUpgrade.decimals) &&
        Objects.equals(this.name, solanaAllowanceUpgrade.name) &&
        Objects.equals(this.newAllowances, solanaAllowanceUpgrade.newAllowances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mint, symbol, decimals, name, newAllowances);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SolanaAllowanceUpgrade {\n");
    
    sb.append("    mint: ").append(toIndentedString(mint)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newAllowances: ").append(toIndentedString(newAllowances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.gopluslabs.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Token NFT Lock 信息表
 */
@Schema(description = "Token NFT Lock 信息表")


public class TaNftLockerLockInfoobject {
  @SerializedName("endTime")
  private Long endTime = null;

  @SerializedName("lockId")
  private String lockId = null;

  @SerializedName("nftId")
  private String nftId = null;

  @SerializedName("nftPositionManager")
  private String nftPositionManager = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("pool")
  private String pool = null;

  @SerializedName("startTime")
  private Integer startTime = null;

  public TaNftLockerLockInfoobject endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * 解锁时间戳
   * @return endTime
  **/
  @Schema(description = "解锁时间戳")
  public Long getEndTime() {
    return endTime;
  }

  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }

  public TaNftLockerLockInfoobject lockId(String lockId) {
    this.lockId = lockId;
    return this;
  }

   /**
   * lock id
   * @return lockId
  **/
  @Schema(description = "lock id")
  public String getLockId() {
    return lockId;
  }

  public void setLockId(String lockId) {
    this.lockId = lockId;
  }

  public TaNftLockerLockInfoobject nftId(String nftId) {
    this.nftId = nftId;
    return this;
  }

   /**
   * nft id
   * @return nftId
  **/
  @Schema(description = "nft id")
  public String getNftId() {
    return nftId;
  }

  public void setNftId(String nftId) {
    this.nftId = nftId;
  }

  public TaNftLockerLockInfoobject nftPositionManager(String nftPositionManager) {
    this.nftPositionManager = nftPositionManager;
    return this;
  }

   /**
   * nft Position Manager
   * @return nftPositionManager
  **/
  @Schema(description = "nft Position Manager")
  public String getNftPositionManager() {
    return nftPositionManager;
  }

  public void setNftPositionManager(String nftPositionManager) {
    this.nftPositionManager = nftPositionManager;
  }

  public TaNftLockerLockInfoobject owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * 用户地址 address
   * @return owner
  **/
  @Schema(description = "用户地址 address")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public TaNftLockerLockInfoobject pool(String pool) {
    this.pool = pool;
    return this;
  }

   /**
   * pool address
   * @return pool
  **/
  @Schema(description = "pool address")
  public String getPool() {
    return pool;
  }

  public void setPool(String pool) {
    this.pool = pool;
  }

  public TaNftLockerLockInfoobject startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * 开始时间戳
   * @return startTime
  **/
  @Schema(description = "开始时间戳")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaNftLockerLockInfoobject taNftLockerLockInfoobject = (TaNftLockerLockInfoobject) o;
    return Objects.equals(this.endTime, taNftLockerLockInfoobject.endTime) &&
        Objects.equals(this.lockId, taNftLockerLockInfoobject.lockId) &&
        Objects.equals(this.nftId, taNftLockerLockInfoobject.nftId) &&
        Objects.equals(this.nftPositionManager, taNftLockerLockInfoobject.nftPositionManager) &&
        Objects.equals(this.owner, taNftLockerLockInfoobject.owner) &&
        Objects.equals(this.pool, taNftLockerLockInfoobject.pool) &&
        Objects.equals(this.startTime, taNftLockerLockInfoobject.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, lockId, nftId, nftPositionManager, owner, pool, startTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaNftLockerLockInfoobject {\n");
    
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    lockId: ").append(toIndentedString(lockId)).append("\n");
    sb.append("    nftId: ").append(toIndentedString(nftId)).append("\n");
    sb.append("    nftPositionManager: ").append(toIndentedString(nftPositionManager)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.gopluslabs.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ResponseWrapperSolanaTokenSecurityLpHolders
 */



public class ResponseWrapperSolanaTokenSecurityLpHolders {
  @SerializedName("balance")
  private String balance = null;

  @SerializedName("token_account")
  private String tokenAccount = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("percent")
  private String percent = null;

  public ResponseWrapperSolanaTokenSecurityLpHolders balance(String balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Amount of tokens held.
   * @return balance
  **/
  @Schema(description = "Amount of tokens held.")
  public String getBalance() {
    return balance;
  }

  public void setBalance(String balance) {
    this.balance = balance;
  }

  public ResponseWrapperSolanaTokenSecurityLpHolders tokenAccount(String tokenAccount) {
    this.tokenAccount = tokenAccount;
    return this;
  }

   /**
   * Address of the holder.
   * @return tokenAccount
  **/
  @Schema(description = "Address of the holder.")
  public String getTokenAccount() {
    return tokenAccount;
  }

  public void setTokenAccount(String tokenAccount) {
    this.tokenAccount = tokenAccount;
  }

  public ResponseWrapperSolanaTokenSecurityLpHolders tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Tag information of the holder.
   * @return tag
  **/
  @Schema(description = "Tag information of the holder.")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public ResponseWrapperSolanaTokenSecurityLpHolders percent(String percent) {
    this.percent = percent;
    return this;
  }

   /**
   * Percentage of total supply held.
   * @return percent
  **/
  @Schema(description = "Percentage of total supply held.")
  public String getPercent() {
    return percent;
  }

  public void setPercent(String percent) {
    this.percent = percent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseWrapperSolanaTokenSecurityLpHolders responseWrapperSolanaTokenSecurityLpHolders = (ResponseWrapperSolanaTokenSecurityLpHolders) o;
    return Objects.equals(this.balance, responseWrapperSolanaTokenSecurityLpHolders.balance) &&
        Objects.equals(this.tokenAccount, responseWrapperSolanaTokenSecurityLpHolders.tokenAccount) &&
        Objects.equals(this.tag, responseWrapperSolanaTokenSecurityLpHolders.tag) &&
        Objects.equals(this.percent, responseWrapperSolanaTokenSecurityLpHolders.percent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balance, tokenAccount, tag, percent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseWrapperSolanaTokenSecurityLpHolders {\n");
    
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    tokenAccount: ").append(toIndentedString(tokenAccount)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

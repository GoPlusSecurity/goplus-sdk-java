/*
 * GoPlus Security API Document
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.gopluslabs.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.gopluslabs.client.model.ResponseWrapperSolanaTokenSecurityClosableAuthority;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Whether the metadata is mutable.
 */
@Schema(description = "Whether the metadata is mutable.")


public class ResponseWrapperSolanaTokenSecurityMetadataMutable {
  @SerializedName("metadata_upgrade_authority")
  private List<ResponseWrapperSolanaTokenSecurityClosableAuthority> metadataUpgradeAuthority = null;

  @SerializedName("status")
  private String status = null;

  public ResponseWrapperSolanaTokenSecurityMetadataMutable metadataUpgradeAuthority(List<ResponseWrapperSolanaTokenSecurityClosableAuthority> metadataUpgradeAuthority) {
    this.metadataUpgradeAuthority = metadataUpgradeAuthority;
    return this;
  }

  public ResponseWrapperSolanaTokenSecurityMetadataMutable addMetadataUpgradeAuthorityItem(ResponseWrapperSolanaTokenSecurityClosableAuthority metadataUpgradeAuthorityItem) {
    if (this.metadataUpgradeAuthority == null) {
      this.metadataUpgradeAuthority = new ArrayList<ResponseWrapperSolanaTokenSecurityClosableAuthority>();
    }
    this.metadataUpgradeAuthority.add(metadataUpgradeAuthorityItem);
    return this;
  }

   /**
   * Information on metadata upgrade authority.
   * @return metadataUpgradeAuthority
  **/
  @Schema(description = "Information on metadata upgrade authority.")
  public List<ResponseWrapperSolanaTokenSecurityClosableAuthority> getMetadataUpgradeAuthority() {
    return metadataUpgradeAuthority;
  }

  public void setMetadataUpgradeAuthority(List<ResponseWrapperSolanaTokenSecurityClosableAuthority> metadataUpgradeAuthority) {
    this.metadataUpgradeAuthority = metadataUpgradeAuthority;
  }

  public ResponseWrapperSolanaTokenSecurityMetadataMutable status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status indicator, where \&quot;1\&quot; means the funtcion is available.
   * @return status
  **/
  @Schema(description = "Status indicator, where \"1\" means the funtcion is available.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseWrapperSolanaTokenSecurityMetadataMutable responseWrapperSolanaTokenSecurityMetadataMutable = (ResponseWrapperSolanaTokenSecurityMetadataMutable) o;
    return Objects.equals(this.metadataUpgradeAuthority, responseWrapperSolanaTokenSecurityMetadataMutable.metadataUpgradeAuthority) &&
        Objects.equals(this.status, responseWrapperSolanaTokenSecurityMetadataMutable.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadataUpgradeAuthority, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseWrapperSolanaTokenSecurityMetadataMutable {\n");
    
    sb.append("    metadataUpgradeAuthority: ").append(toIndentedString(metadataUpgradeAuthority)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
